
name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build project with compression
        run: npm run build

      - name: Create .htaccess for GitHub Pages
        run: |
          cat > dist/.htaccess << 'EOF'
          # Enable compression for GitHub Pages
          <IfModule mod_mime.c>
            AddType application/javascript .js.gz
            AddType text/css .css.gz
            AddType application/json .json.gz
            AddType image/svg+xml .svg.gz
            AddType text/html .html.gz
          </IfModule>
          
          <IfModule mod_headers.c>
            # Serve gzip compressed files
            <FilesMatch "\.(js|css|json|svg|html)\.gz$">
              Header set Content-Encoding gzip
            </FilesMatch>
            
            # Serve brotli compressed files
            <FilesMatch "\.(js|css|json|svg|html)\.br$">
              Header set Content-Encoding br
            </FilesMatch>
          </IfModule>
          
          # Rewrite rules for compressed files
          <IfModule mod_rewrite.c>
            RewriteEngine On
            
            # Check for brotli support and serve .br files
            RewriteCond %{HTTP:Accept-Encoding} br
            RewriteCond %{REQUEST_FILENAME}\.br -f
            RewriteRule ^(.*)$ $1.br [L]
            
            # Check for gzip support and serve .gz files
            RewriteCond %{HTTP:Accept-Encoding} gzip
            RewriteCond %{REQUEST_FILENAME}\.gz -f
            RewriteRule ^(.*)$ $1.gz [L]
          </IfModule>
          EOF

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
