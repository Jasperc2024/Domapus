(function(){"use strict";function h(f,n){if(!f)return 0;const o=f[n];return typeof o=="number"&&isFinite(o)?o:0}self.onmessage=async f=>{var E;const{id:n,type:o,data:S}=f.data;try{switch(o){case"LOAD_AND_PROCESS_DATA":{const{url:e,selectedMetric:d}=S;self.postMessage({type:"PROGRESS",data:{phase:"Fetching market data..."}});const c=await fetch(e);if(!c.ok)throw new Error(`Fetch failed with status: ${c.status}`);const u=await c.json(),{last_updated_utc:i,zip_codes:p}=u;if(!p)throw new Error("Data file is missing 'zip_codes' key.");self.postMessage({type:"PROGRESS",data:{phase:"Processing ZIP code data..."}});const s={};let t=0;const g=Object.keys(p).length;for(const[r,a]of Object.entries(p))a.zipCode=r,s[r]=a,t++,t%1e3===0&&self.postMessage({type:"PROGRESS",data:{phase:"Processing ZIP code data...",processed:t,total:g}});self.postMessage({type:"PROGRESS",data:{phase:"Calculating metric bounds..."}});const l=[];for(const r of Object.values(s)){const a=h(r,d);a>0&&l.push(a)}l.sort((r,a)=>r-a);const y={min:l[0]||0,max:l[l.length-1]||0};self.postMessage({type:"DATA_PROCESSED",id:n,data:{zip_codes:s,last_updated_utc:i,bounds:y}});break}case"PROCESS_GEOJSON":{const{geojson:e,zipData:d,selectedMetric:c}=S;if(!e||!Array.isArray(e.features))throw new Error("Invalid GeoJSON data provided to worker.");self.postMessage({type:"PROGRESS",data:{phase:"Processing map shapes..."}});const u=[];let i=0;const p=e.features.length;for(const s of e.features){if(!s.geometry)continue;const t=(E=s.properties)==null?void 0:E.ZCTA5CE20;if(!t||!d[t])continue;const g=h(d[t],c);s.properties.zipCode=t,s.properties.metricValue=g,u.push(s),i++,i%5e3===0&&self.postMessage({type:"PROGRESS",data:{phase:"Processing map shapes...",processed:i,total:p}})}self.postMessage({type:"GEOJSON_PROCESSED",id:n,data:{type:"FeatureCollection",features:u}});break}default:throw new Error(`Unknown message type: ${o}`)}}catch(e){console.error("‚ùå [Worker] Error:",e),self.postMessage({type:"ERROR",id:n,error:e instanceof Error?e.message:"Unknown worker error"})}}})();
